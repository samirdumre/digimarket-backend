services:
  app:
    image: samirdumre/digimarket-backend:latest
    container_name: digimarket_app
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - APP_ENV=production
      - APP_URL=${APP_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - APP_FRONTEND_URL=${APP_FRONTEND_URL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - FILESYSTEM_DISK=${FILESYSTEM_DISK}
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - storage_data:/var/www/html/storage/app
      - logs_data:/var/www/html/storage/logs
      - ./public/storage:/var/www/html/public/storage
    networks:
      - digimarket-net

  postgres:
    image: postgres:17-alpine
    container_name: digimarket_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env.production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - digimarket-net

volumes:
  postgres_data:
  storage_data:
  logs_data:

networks:
  digimarket-net:
    external: true